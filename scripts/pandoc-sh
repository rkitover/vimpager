#!/bin/sh

# Add metadata to generated docs

# Make section title for man pages.
title="`echo "$@" | \
    sed 's/.*-o *\([^ ]*\).*/\1/'
`"

title="`basename \"$title\"`"

# Capitalize.
title="`echo \"$title\" | tr 'a-z' 'A-Z'`"

# FOO.1 -> FOO(1) Vimpager User Manual
title="`echo \"$title\" | sed \
    -e 's/\.\([0-9][0-9]*\)/(\1)/' \
    -e 's/\..*//' \
    -e 's/$/ Vimpager User Manual/'
`"

# Only do this for man pages.
title="`echo \"$title\" | \
    sed -e 's/^[^()]*Vimpager User Manual$/Vimpager User Manual/'
`"

# use markdown instead of markdown_github on older versions
# and markdown_github+pandoc_title_block on newer ones
old_pandoc=0
pandoc_version=$(pandoc --version | head -1 | cut -d' ' -f2)
pandoc_major_version=${pandoc_version%%.*}
pandoc_minor_version=${pandoc_version#*.}
pandoc_minor_version=${pandoc_minor_version%%.*}
if [ $pandoc_major_version -le 1 ] && [ $pandoc_minor_version -le 9 ]; then
    old_pandoc=1
fi

first_arg=1
for arg in "$@"; do
    if [ $first_arg -eq 1 ]; then
        if [ $old_pandoc -eq 1 ]; then
            set -- "-S"
        else
            set --
        fi
        first_arg=0
    fi

    if [ "$arg" = markdown_github ]; then
	if [ $old_pandoc -eq 1 ]; then
	    set -- "$@" markdown
	else
	    set -- "$@" markdown_github+pandoc_title_block+smart
	fi
    else
	set -- "$@" "$arg"
    fi
done

# find source file and write out file with meta block

for arg in "$@"; do
    case "$arg" in
	*.md)
	    source_file="$arg"
	    ;;
	*.md.*)
	    source_file="$arg"
	    ;;
    esac
done

meta_file="`dirname \"$source_file\"`"/"with_meta_`basename \"$source_file\"`"

printf '%% %s\n' "$title" >> "$meta_file"

OLDIFS="$IFS"
IFS='
'

first=1
for author in `sed -ne 's/^- //p' DOC_AUTHORS.yml`; do
    if [ $first -eq 1 ]; then
	printf '%% %s' "$author" >> "$meta_file"
	first=0
    else
	printf '; %s' "$author" >> "$meta_file"
    fi
done

printf '\n' >> "$meta_file"

IFS="$OLDIFS"

printf '%% %s\n' "`date +'%B %d, %Y'`" >> "$meta_file"

cat "$source_file" >> "$meta_file"

# replace source file with created file with meta block in arg list
first_arg=1
for arg in "$@"; do
    [ $first_arg -eq 1 ] && set -- && first_arg=0

    if [ "$arg" = "$source_file" ]; then
	set -- "$@" "$meta_file"
    else
	set -- "$@" "$arg"
    fi
done

pandoc "$@"
exit_status=$?

rm -f -- "$meta_file"

exit $exit_status
